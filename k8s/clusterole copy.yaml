apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kubectl
  name: kubectl 
  namespace: ines
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: kubectl
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kubectl
    spec:
      containers:
      - image: bitnami/kubectl:1.28
        command: 
        - sh
        - -c
        - sleep 6000
        imagePullPolicy: IfNotPresent
        name: kubectl
        ports:
        - containerPort: 80
          protocol: TCP
      serviceAccountName: lab-chaos
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: lab-chaos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: lab-chaos
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log"]
  verbs: ["delete"]
- apiGroups: ["batch", "extensions"]
  resources: ["jobs"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
#kind: ClusterRoleBinding
#apiVersion: rbac.authorization.k8s.io/v1
#metadata:
#  name: lab-chaos-user
#subjects:
#- kind: User
#  name: ""
#  namespace: ""
#roleRef:
#  apiGroup: rbac.authorization.k8s.io
#  kind: ClusterRole
#  name: lab-chaos
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: lab-chaos
subjects:
- kind: ServiceAccount
  name: lab-chaos
  namespace: ""
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: lab-chaos